plot_data <- rbind(error_data_2, error_data_5, error_data_10)
View(plot_data)
#initialize dataset and remove nas
library(tidyr)
data(my_penguins)
my_data <- drop_na(my_penguins)
#create empty vectors to store cross validation errors
cv_errors_2 <- rep(NA, 30)
cv_errors_5 <- rep(NA, 30)
cv_errors_10 <- rep(NA, 30)
#runs my_rf_cv 30 times per each k value
my_rf_cv(2)
for (i in 1:30) {
cv_errors_2[i] <- my_rf_cv(2)
cv_errors_5[i] <- my_rf_cv(5)
cv_errors_10[i] <- my_rf_cv(10)
}
#creates dataset out of recorded errors
error_data_2 <- data.frame(k = "2", error = cv_errors_2)
error_data_5 <- data.frame(k = "5", error = cv_errors_5)
error_data_10 <- data.frame(k = "10", error = cv_errors_10)
plot_data <- rbind(error_data_2, error_data_5, error_data_10)
#make boxplots
ggplot(data = plot_data
aes(x = k, y = error)) +
#initialize dataset and remove nas
library(tidyr)
data(my_penguins)
my_data <- drop_na(my_penguins)
#create empty vectors to store cross validation errors
cv_errors_2 <- rep(NA, 30)
cv_errors_5 <- rep(NA, 30)
cv_errors_10 <- rep(NA, 30)
#runs my_rf_cv 30 times per each k value
my_rf_cv(2)
for (i in 1:30) {
cv_errors_2[i] <- my_rf_cv(2)
cv_errors_5[i] <- my_rf_cv(5)
cv_errors_10[i] <- my_rf_cv(10)
}
#creates dataset out of recorded errors
error_data_2 <- data.frame(k = "2", error = cv_errors_2)
error_data_5 <- data.frame(k = "5", error = cv_errors_5)
error_data_10 <- data.frame(k = "10", error = cv_errors_10)
plot_data <- rbind(error_data_2, error_data_5, error_data_10)
#make boxplots
ggplot(data = plot_data,
aes(x = k, y = error)) +
geom_boxplot(fill = k)
View(plot_data)
#initialize dataset and remove nas
library(tidyr)
data(my_penguins)
my_data <- drop_na(my_penguins)
#create empty vectors to store cross validation errors
cv_errors_2 <- rep(NA, 30)
cv_errors_5 <- rep(NA, 30)
cv_errors_10 <- rep(NA, 30)
#runs my_rf_cv 30 times per each k value
my_rf_cv(2)
for (i in 1:30) {
cv_errors_2[i] <- my_rf_cv(2)
cv_errors_5[i] <- my_rf_cv(5)
cv_errors_10[i] <- my_rf_cv(10)
}
#creates dataset out of recorded errors
error_data_2 <- data.frame(k_val = "2", error = cv_errors_2)
error_data_5 <- data.frame(k_val = "5", error = cv_errors_5)
error_data_10 <- data.frame(k_val = "10", error = cv_errors_10)
plot_data <- rbind(error_data_2, error_data_5, error_data_10)
#make boxplots
ggplot(data = plot_data,
aes(x = k_val, y = error)) +
geom_boxplot(fill = k)
#initialize dataset and remove nas
library(tidyr)
data(my_penguins)
my_data <- drop_na(my_penguins)
#create empty vectors to store cross validation errors
cv_errors_2 <- rep(NA, 30)
cv_errors_5 <- rep(NA, 30)
cv_errors_10 <- rep(NA, 30)
#runs my_rf_cv 30 times per each k value
my_rf_cv(2)
for (i in 1:30) {
cv_errors_2[i] <- my_rf_cv(2)
cv_errors_5[i] <- my_rf_cv(5)
cv_errors_10[i] <- my_rf_cv(10)
}
#creates dataset out of recorded errors
error_data_2 <- data.frame(k_val = "2", error = cv_errors_2)
error_data_5 <- data.frame(k_val = "5", error = cv_errors_5)
error_data_10 <- data.frame(k_val = "10", error = cv_errors_10)
plot_data <- rbind(error_data_2, error_data_5, error_data_10)
#make boxplots
ggplot(data = plot_data,
aes(x = k_val, y = error)) +
geom_boxplot(fill = k_val)
ggplot(data = plot_data,
aes(x = k_val, y = error)) +
geom_boxplot()
#initialize dataset and remove nas
library(tidyr)
data(my_penguins)
my_data <- drop_na(my_penguins)
#create empty vectors to store cross validation errors
cv_errors_2 <- rep(NA, 30)
cv_errors_5 <- rep(NA, 30)
cv_errors_10 <- rep(NA, 30)
#runs my_rf_cv 30 times per each k value
my_rf_cv(2)
for (i in 1:30) {
cv_errors_2[i] <- my_rf_cv(2)
cv_errors_5[i] <- my_rf_cv(5)
cv_errors_10[i] <- my_rf_cv(10)
}
#creates dataset out of recorded errors
error_data_2 <- data.frame(k = "2", error = cv_errors_2)
error_data_5 <- data.frame(k = "5", error = cv_errors_5)
error_data_10 <- data.frame(k = "10", error = cv_errors_10)
plot_data <- rbind(error_data_2, error_data_5, error_data_10)
#make boxplots
ggplot(data = plot_data,
aes(x = k, y = error, fill = k)) +
geom_boxplot()
#theme_bw(base_size = 20) +
#labs(title = "Life expectancy by Continent",
x = "",
#initialize dataset and remove nas
library(tidyr)
data(my_penguins)
my_data <- drop_na(my_penguins)
#create empty vectors to store cross validation errors
cv_errors_2 <- rep(NA, 30)
cv_errors_5 <- rep(NA, 30)
cv_errors_10 <- rep(NA, 30)
#runs my_rf_cv 30 times per each k value
my_rf_cv(2)
for (i in 1:30) {
cv_errors_2[i] <- my_rf_cv(2)
cv_errors_5[i] <- my_rf_cv(5)
cv_errors_10[i] <- my_rf_cv(10)
}
#creates dataset out of recorded errors
error_data_2 <- data.frame(k = "2", error = cv_errors_2)
error_data_5 <- data.frame(k = "5", error = cv_errors_5)
error_data_10 <- data.frame(k = "10", error = cv_errors_10)
plot_data <- rbind(error_data_2, error_data_5, error_data_10)
#make boxplots
ggplot(data = plot_data,
aes(x = k, y = error, fill = k)) +
geom_boxplot()
theme_bw(base_size = 20) +
labs(title = "Cross-Validation Mean Squared Error by k value",
x = "k",
y = "CV MSE") +
theme(plot.title =
element_text(hjust = 0.5)) +
#ylim(c(0, 85))
#initialize dataset and remove nas
library(tidyr)
data(my_penguins)
my_data <- drop_na(my_penguins)
#create empty vectors to store cross validation errors
cv_errors_2 <- rep(NA, 30)
cv_errors_5 <- rep(NA, 30)
cv_errors_10 <- rep(NA, 30)
#runs my_rf_cv 30 times per each k value
my_rf_cv(2)
for (i in 1:30) {
cv_errors_2[i] <- my_rf_cv(2)
cv_errors_5[i] <- my_rf_cv(5)
cv_errors_10[i] <- my_rf_cv(10)
}
#creates dataset out of recorded errors
error_data_2 <- data.frame(k = "2", error = cv_errors_2)
error_data_5 <- data.frame(k = "5", error = cv_errors_5)
error_data_10 <- data.frame(k = "10", error = cv_errors_10)
plot_data <- rbind(error_data_2, error_data_5, error_data_10)
#make boxplots
ggplot(data = plot_data,
aes(x = k, y = error, fill = k)) +
geom_boxplot() +
theme_bw(base_size = 20) +
labs(title = "Cross-Validation Mean Squared Error by k value",
x = "k",
y = "CV MSE") +
theme(plot.title =
element_text(hjust = 0.5)) +
#ylim(c(0, 85))
#initialize dataset and remove nas
library(tidyr)
data(my_penguins)
my_data <- drop_na(my_penguins)
#create empty vectors to store cross validation errors
cv_errors_2 <- rep(NA, 30)
cv_errors_5 <- rep(NA, 30)
cv_errors_10 <- rep(NA, 30)
#runs my_rf_cv 30 times per each k value
my_rf_cv(2)
for (i in 1:30) {
cv_errors_2[i] <- my_rf_cv(2)
cv_errors_5[i] <- my_rf_cv(5)
cv_errors_10[i] <- my_rf_cv(10)
}
#creates dataset out of recorded errors
error_data_2 <- data.frame(k = "2", error = cv_errors_2)
error_data_5 <- data.frame(k = "5", error = cv_errors_5)
error_data_10 <- data.frame(k = "10", error = cv_errors_10)
plot_data <- rbind(error_data_2, error_data_5, error_data_10)
#make boxplots
ggplot(data = plot_data,
aes(x = k, y = error, fill = k)) +
geom_boxplot() +
theme_bw(base_size = 20) +
labs(title = "Cross-Validation Mean Squared Error by k value",
x = "k",
y = "CV MSE") +
theme(plot.title =
element_text(hjust = 0.5))
ggplot(data = plot_data,
aes(x = k, y = error, fill = k)) +
geom_boxplot() +
theme_bw(base_size = 20)
ggplot(data = plot_data,
aes(x = k, y = error, fill = k)) +
geom_boxplot()
ggplot(data = plot_data,
aes(x = k, y = error, fill = k)) +
geom_boxplot() +
theme_bw(base_size = 20)
ggplot(data = plot_data,
aes(x = k, y = error, fill = k)) +
geom_boxplot() +
labs(title = "Cross-Validation Mean Squared Error by k value",
x = "k",
y = "CV MSE") +
theme(plot.title =
element_text(hjust = 0.5))
ggplot(data = plot_data,
aes(x = k, y = error, fill = k)) +
geom_boxplot() +
theme_bw() +
labs(title = "Cross-Validation Mean Squared Error by k value",
x = "k",
y = "CV MSE") +
theme(plot.title =
element_text(hjust = 0.5))
error_stats <- data.frame("Mean CV MSE" = c(mean(cv_errors_2), mean(cv_errors_5), mean(cv_errors_10)))
View(error_stats)
#initialize dataset and remove nas
library(tidyr)
data(my_penguins)
my_data <- drop_na(my_penguins)
#create empty vectors to store cross validation errors
cv_errors_2 <- rep(NA, 30)
cv_errors_5 <- rep(NA, 30)
cv_errors_10 <- rep(NA, 30)
#runs my_rf_cv 30 times per each k value
my_rf_cv(2)
for (i in 1:30) {
cv_err_2[i] <- my_rf_cv(2)
cv_err_5[i] <- my_rf_cv(5)
cv_err_10[i] <- my_rf_cv(10)
}
#initialize dataset and remove nas
library(tidyr)
data(my_penguins)
my_data <- drop_na(my_penguins)
#create empty vectors to store cross validation errors
cv_err_2 <- rep(NA, 30)
cv_err_5 <- rep(NA, 30)
cv_err_10 <- rep(NA, 30)
#runs my_rf_cv 30 times per each k value
my_rf_cv(2)
for (i in 1:30) {
cv_err_2[i] <- my_rf_cv(2)
cv_err_5[i] <- my_rf_cv(5)
cv_err_10[i] <- my_rf_cv(10)
}
#creates dataset out of recorded errors
error_data_2 <- data.frame(k = "2", error = cv_err_2)
error_data_5 <- data.frame(k = "5", error = cv_err_5)
error_data_10 <- data.frame(k = "10", error = cv_err_10)
plot_data <- rbind(error_data_2, error_data_5, error_data_10)
#make boxplots
ggplot(data = plot_data,
aes(x = k, y = error, fill = k)) +
geom_boxplot() +
theme_bw() +
labs(title = "Cross-Validation Mean Squared Error by k value",
x = "k",
y = "CV MSE") +
theme(plot.title =
element_text(hjust = 0.5))
#creates dataset for table
error_stats <- data.frame("Mean CV MSE" =
c(mean(cv_err_2), mean(cv_err_5), mean(cv_err_10))),
#initialize dataset and remove nas
library(tidyr)
data(my_penguins)
my_data <- drop_na(my_penguins)
#create empty vectors to store cross validation errors
cv_err_2 <- rep(NA, 30)
cv_err_5 <- rep(NA, 30)
cv_err_10 <- rep(NA, 30)
#runs my_rf_cv 30 times per each k value
my_rf_cv(2)
for (i in 1:30) {
cv_err_2[i] <- my_rf_cv(2)
cv_err_5[i] <- my_rf_cv(5)
cv_err_10[i] <- my_rf_cv(10)
}
#creates dataset out of recorded errors
error_data_2 <- data.frame(k = "2", error = cv_err_2)
error_data_5 <- data.frame(k = "5", error = cv_err_5)
error_data_10 <- data.frame(k = "10", error = cv_err_10)
plot_data <- rbind(error_data_2, error_data_5, error_data_10)
#make boxplots
ggplot(data = plot_data,
aes(x = k, y = error, fill = k)) +
geom_boxplot() +
theme_bw() +
labs(title = "Cross-Validation Mean Squared Error by k value",
x = "k",
y = "CV MSE") +
theme(plot.title =
element_text(hjust = 0.5))
#creates dataset for table
error_stats <- data.frame("Mean CV MSE" =
c(mean(cv_err_2), mean(cv_err_5), mean(cv_err_10)),
"SD of CV MSE" =
c(sd(cv_err_2), sd(cv_err_5), sd(cv_err_10))
)
View(error_stats)
ggplot(data = plot_data,
aes(x = k, y = error, fill = k)) +
geom_boxplot() +
theme_bw() +
labs(title = "Cross-Validation Mean Squared Error by k value",
x = "k",
y = "CV MSE") +
theme(plot.title =
element_text(hjust = 0.5))
#initialize dataset and remove nas
library(tidyr)
data(my_penguins)
my_data <- drop_na(my_penguins)
#create empty vectors to store cross validation errors
cv_err_2 <- rep(NA, 30)
cv_err_5 <- rep(NA, 30)
cv_err_10 <- rep(NA, 30)
#runs my_rf_cv 30 times per each k value
my_rf_cv(2)
for (i in 1:30) {
cv_err_2[i] <- my_rf_cv(2)
cv_err_5[i] <- my_rf_cv(5)
cv_err_10[i] <- my_rf_cv(10)
}
#creates dataset out of recorded errors
error_data_2 <- data.frame(k = "2", error = cv_err_2)
error_data_5 <- data.frame(k = "5", error = cv_err_5)
error_data_10 <- data.frame(k = "10", error = cv_err_10)
plot_data <- rbind(error_data_2, error_data_5, error_data_10)
#make boxplots
ggplot(data = plot_data,
aes(x = k, y = error, fill = k)) +
geom_boxplot() +
theme_bw() +
labs(title = "Cross-Validation Mean Squared Error by k value",
x = "k",
y = "CV MSE") +
theme(plot.title =
element_text(hjust = 0.5))
#creates dataset for table
error_stats <- data.frame("Mean CV MSE" =
c(mean(cv_err_2), mean(cv_err_5), mean(cv_err_10)),
"SD of CV MSE" =
c(sd(cv_err_2), sd(cv_err_5), sd(cv_err_10))
)
kable_styling(kable(error_stats))
library(STAT302Package)
my_rf_cv(2)
library(tidyr)
data(my_penguins)
my_data <- drop_na(my_penguins)
my_rf_cv(2)
my_rf_cv(2)
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
#initialize dataset and remove nas
library(tidyr)
data(my_penguins)
my_data <- drop_na(my_penguins)
#create empty vectors to store cross validation errors
cv_err_2 <- rep(NA, 30)
cv_err_5 <- rep(NA, 30)
cv_err_10 <- rep(NA, 30)
#runs my_rf_cv 30 times per each k value
for (i in 1:30) {
cv_err_2[i] <- my_rf_cv(2)
cv_err_5[i] <- my_rf_cv(5)
cv_err_10[i] <- my_rf_cv(10)
}
#creates dataset out of recorded errors
error_data_2 <- data.frame(k = "2", error = cv_err_2)
error_data_5 <- data.frame(k = "5", error = cv_err_5)
error_data_10 <- data.frame(k = "10", error = cv_err_10)
plot_data <- rbind(error_data_2, error_data_5, error_data_10)
#make boxplots
ggplot(data = plot_data,
aes(x = k, y = error, fill = k)) +
geom_boxplot() +
theme_bw() +
labs(title = "Cross-Validation Mean Squared Error by k value",
x = "k",
y = "CV MSE") +
theme(plot.title =
element_text(hjust = 0.5))
#creates dataset for table
error_stats <- data.frame("Mean CV MSE" =
c(mean(cv_err_2), mean(cv_err_5), mean(cv_err_10)),
"SD of CV MSE" =
c(sd(cv_err_2), sd(cv_err_5), sd(cv_err_10))
)
kable_styling(kable(error_stats))
library(STAT302Package)
library(tidyr)
data(my_penguins)
my_data <- drop_na(my_penguins)
my_rf_cv(2)
library(STAT302Package)
library(ggplot2)
library(kableExtra)
data("my_gapminder")
data("my_penguins")
#initialize dataset and remove nas
library(tidyr)
data(my_penguins)
my_data <- drop_na(my_penguins)
#create empty vectors to store cross validation errors
cv_err_2 <- rep(NA, 30)
cv_err_5 <- rep(NA, 30)
cv_err_10 <- rep(NA, 30)
#runs my_rf_cv 30 times per each k value
for (i in 1:30) {
cv_err_2[i] <- my_rf_cv(2)
cv_err_5[i] <- my_rf_cv(5)
cv_err_10[i] <- my_rf_cv(10)
}
devtools::document()
devtools::check()
my_rf_cv(2)
library(tidyr)
data(my_penguins)
my_data <- drop_na(my_penguins)
my_rf_cv(2)
#initialize dataset and remove nas
library(tidyr)
data(my_penguins)
my_data <- drop_na(my_penguins)
#create empty vectors to store cross validation errors
cv_err_2 <- rep(NA, 30)
cv_err_5 <- rep(NA, 30)
cv_err_10 <- rep(NA, 30)
#runs my_rf_cv 30 times per each k value
for (i in 1:30) {
cv_err_2[i] <- my_rf_cv(2)
cv_err_5[i] <- my_rf_cv(5)
cv_err_10[i] <- my_rf_cv(10)
}
#creates dataset out of recorded errors
error_data_2 <- data.frame(k = "2", error = cv_err_2)
error_data_5 <- data.frame(k = "5", error = cv_err_5)
error_data_10 <- data.frame(k = "10", error = cv_err_10)
plot_data <- rbind(error_data_2, error_data_5, error_data_10)
#make boxplots
ggplot(data = plot_data,
aes(x = k, y = error, fill = k)) +
geom_boxplot() +
theme_bw() +
labs(title = "Cross-Validation Mean Squared Error by k value",
x = "k",
y = "CV MSE") +
theme(plot.title =
element_text(hjust = 0.5))
#creates dataset for table
error_stats <- data.frame("Mean CV MSE" =
c(mean(cv_err_2), mean(cv_err_5), mean(cv_err_10)),
"SD of CV MSE" =
c(sd(cv_err_2), sd(cv_err_5), sd(cv_err_10))
)
kable_styling(kable(error_stats))
my_rf_cv(2)
library(tidyr)
data(my_penguins)
my_data <- drop_na(my_penguins)
my_rf_cv()
my_rf_cv(2)
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::install_github("juanhillon/STAT302Package", build_vignette = TRUE, build_opts = c())
library(STAT302Package)
help(package = "STAT302Package", help_type = "html")
